# Generated by Django 5.2.5 on 2025-08-20 12:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('tc_kimlik', models.CharField(help_text='11 haneli TC Kimlik Numarası', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='TC Kimlik Numarası 11 haneli olmalıdır ve sadece rakam içermelidir.', regex='^[0-9]{11}$')], verbose_name='TC Kimlik Numarası')),
                ('role', models.CharField(choices=[('superadmin', 'Süper Admin'), ('admin', 'Admin'), ('user', 'Standart Kullanıcı')], default='user', max_length=20, verbose_name='Kullanıcı Rolü')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefon Numarası')),
                ('first_name', models.CharField(max_length=150, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=150, verbose_name='Soyad')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-posta Adresi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Hesap Aktif')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Son Giriş')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Kayıt Tarihi')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, verbose_name='Başarısız Giriş Denemeleri')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Hesap Kilitli')),
                ('locked_at', models.DateTimeField(blank=True, null=True, verbose_name='Kilitlenme Tarihi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('login', 'Giriş'), ('logout', 'Çıkış'), ('login_failed', 'Başarısız Giriş'), ('password_change', 'Şifre Değişikliği'), ('profile_update', 'Profil Güncelleme'), ('device_add', 'Cihaz Ekleme'), ('device_update', 'Cihaz Güncelleme'), ('device_delete', 'Cihaz Silme'), ('account_locked', 'Hesap Kilitlendi'), ('account_unlocked', 'Hesap Açıldı')], max_length=20, verbose_name='Log Türü')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='Tarayıcı Bilgisi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Logu',
                'verbose_name_plural': 'Kullanıcı Logları',
                'ordering': ['-created_at'],
            },
        ),
    ]
